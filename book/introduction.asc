[preface]
//////////////////////////
== Introduction
//////////////////////////
== 前書き

//////////////////////////
You’re about to spend several hours of your life reading about Git. Let’s take a minute to explain
what we have in store for you. Here is a quick summary of the ten chapters and three appendices of this book.
//////////////////////////
これから、数時間ほどかけて Git についての本を読んでいただくことになります。その前に少し時間をいただいて、全10章と3つの付録からなるこの本の内容を紹介させてください。

//////////////////////////
In *Chapter 1*, we’re going to cover Version Control Systems (VCSs) and Git basics—no
technical stuff, just what Git is, why it came about in a land full of VCSs, what sets it apart, and
why so many people are using it. Then, we’ll explain how to download Git and set it up for the
first time if you don’t already have it on your system.
//////////////////////////
**第1章**では、バージョン管理システム（VCS）と「Git とは何か」を解説します。専門的な部分にはまだ触れません。Git の概要、多くの VCS があるなか敢えて Git が開発された理由、他の VCS にはない特徴、多くの人に使われている理由について述べます。また、手元に Git 環境がない読者向けに、Git のダウンロード方法や初回セットアップの方法も説明します。

//////////////////////////
In *Chapter 2*, we will go over basic Git usage—how to use Git in the 80% of cases you’ll
encounter most often. After reading this chapter, you should be able to clone a repository, see
what has happened in the history of the project, modify files, and contribute changes. If the book
spontaneously combusts at this point, you should already be pretty useful wielding Git in the time
it takes you to go pick up another copy.
//////////////////////////
**第2章**では、Git の使い方の基本を説明します。日常的に Git を使っておこなう操作の8割をこの章で解説します。この章を読めば、リポジトリのクローン、履歴の確認、ファイル編集、変更の追加などが出来るようになるはずです。このタイミングで諸事情により本書が灰と化したとしても、新たにもう1冊用意する必要はないでしょう。すでに Git をそつなく使いこなせるようになっているはずだからです。

//////////////////////////
*Chapter 3* is about the branching model in Git, often described as Git’s killer feature. Here
you’ll learn what truly sets Git apart from the pack. When you’re done, you may feel the need to
spend a quiet moment pondering how you lived before Git branching was part of your life.
//////////////////////////
**第3章**では、Git のブランチモデルについて説明します。Git 最大の魅力の1つとされているものです。この章を読めば、世の中にある VCS と比べて Git が如何に際立っているかがわかるでしょう。また、少し時間を取って、「Git のブランチ機能がなかったころはどうやって生き延びていたのだろう」と思いを馳せることになるかもしれません。

//////////////////////////
*Chapter 4* will cover Git on the server. This chapter is for those of you who want to set up Git
inside your organization or on your own personal server for collaboration. We will also explore
various hosted options if you prefer to let someone else handle that for you.
//////////////////////////
**第4章**では、Git のサーバー機能を解説します。組織内や個人のサーバーに Git をセットアップして共同作業をしたい、という読者の方におすすめの章です。そういったことは誰かにお任せしたい、という読者向けに、Git のホスティングサービスについても触れます。

//////////////////////////
*Chapter 5* will go over in full detail various distributed workflows and how to accomplish
them with Git. When you are done with this chapter, you should be able to work expertly with
multiple remote repositories, use Git over email and deftly juggle numerous remote branches
and contributed patches.
//////////////////////////
**第5章**では、分散型のワークフローを紹介し、更に Git を使ってそれらを運用していく方法を解説します。この章を読み終えるころには、複数のリモートリポジトリを使いこなす Git の専門家になっているはずです。メールを使って Git を操り、いくつものブランチや受け取ったパッチを自由に行き来できるようになるでしょう。

//////////////////////////
*Chapter 6* covers the GitHub hosting service and tooling in depth. We cover signing up for and managing an account, creating and using Git repositories, common workflows to contribute to projects and to accept contributions to yours, GitHub's programmatic interface and lots of little tips to make your life easier in general.
//////////////////////////
**第6章**では、Git のホスティングサービスである GitHub とその機能について詳しく解説します。アカウント作成と管理方法、Git リポジトリ作成と使用方法、他者のプロジェクトへの貢献方法と自分のプロジェクトで貢献を受け付ける方法、GitHub API、Git を使う日々を楽にしてくれるノウハウ集を紹介します。

//////////////////////////
*Chapter 7* is about advanced Git commands. Here you will learn about topics like mastering the scary 'reset' command, using binary
search to identify bugs, editing history, revision selection in detail, and a lot more. This
chapter will round out your knowledge of Git so that you are truly a master.
//////////////////////////
**第7章**では、高度な Git コマンドを解説します。こわいこわい 'reset' コマンドの使いこなし、二分探索を駆使したバグの特定手法、歴史の改変方法、リビジョン指定の詳細などなど、高度なテクニックを身につけられる章です。この章を読めば Git の理解が深まり、まさに Git のプロと呼べるレベルまであなたを引き上げてくれるはずです。

//////////////////////////
*Chapter 8* is about configuring your custom Git environment. This includes setting up hook
scripts to enforce or encourage customized policies and using environment configuration settings
so you can work the way you want to. We will also cover building your own set of scripts to
enforce a custom committing policy.
//////////////////////////
**第8章**では、 Git 環境をカスタマイズする方法を解説します。具体的には、フックスクリプトを使ってプロジェクト固有のポリシーを強制・推奨する方法や、自分好みの環境で作業するための設定方法などを説明します。また、コミットポリシーを強制するためのスクリプトの作り方についても触れます。

//////////////////////////
*Chapter 9* deals with Git and other VCSs. This includes using Git in a Subversion (SVN) world
and converting projects from other VCSs to Git. A lot of organizations still use SVN and are
not about to change, but by this point you’ll have learned the incredible power of Git—and this
chapter shows you how to cope if you still have to use a SVN server. We also cover how to
import projects from several different systems in case you do convince everyone to make the
plunge.
//////////////////////////
**第9章**では、Git とそれ以外の VCS について解説します。具体的には、Subversion（SNV）環境において Git を使う方法や、Git 以外の VCS を採用しているプロジェクトを Git に移行する方法を説明します。多くの組織ではいまだに SVN が使われており、その傾向は今後もしばらく続きそうです。一方、ここまで読み進めてきた読者であれば、Git のポテンシャルがいかに高いかご存知のことでしょう。この章では、SVN を今後も使わざるを得ない読者向けに、うまくやりくりしていく方法をお教えします。また、清水の舞台から飛び降りるようプロジェクトメンバー全員を説得できた方向けに、Git 以外の VCS から Git へプロジェクトをインポートする方法も説明します。

//////////////////////////
*Chapter 10* delves into the murky yet beautiful depths of Git internals. Now that you know all 
about Git and can wield it with power and grace, you can move on to discuss how Git stores its objects,
what the object model is, details of packfiles, server protocols, and more. Throughout the book,
we will refer to sections of this chapter in case you feel like diving deep at that point; 
but if you are like us and want to dive into the technical details, you may want to read Chapter 10 first.
We leave that up to you.
//////////////////////////
**第10章**では、あまり知られていない、けれど実態はとても洗練されている、 Git の内部構造を深掘りしていきます。ここまで読み進めていれば、Git について熟知できているでしょう。スイスイと使いこなせるようにもなっているはずです。さらに一歩踏み込んで、Git オブジェクトがどのように保存されているか、オブジェクトモデルはどうなっているか、packfile の詳細、サーバープロトコルなどについて議論を深めてみましょう。本章は他の章の様々な部分から参照されています。各章を読んでいるときに詳しく知りたい項目が見つかった場合は、本章の該当部分を読んでみてください。もし、あなたが著者のように「まずは技術の詳細を把握しておきたい」というタイプであれば、本章から読み進めるといいでしょう。
どちらを選ぶかは読者の皆さんしだいです。

//////////////////////////
In *Appendix A* we look at a number of examples of using Git in various specific environments. We cover
a number of different GUIs and IDE programming environments that you may want to use Git in and what
is available for you. If you're interested in an overview of using Git in your shell, in Visual Studio
or Eclipse, take a look here.
//////////////////////////
**付録 A** では、Git の使い方を様々な環境ごとに確認していきます。Git と組み合わせて使いたくなるであろう GUI ベースのツールや統合開発環境のなかから、すぐに試せるものを数多く紹介します。「コマンドラインで Git を使いたい」「Visual Studio や Eclipse で Git を使いたい」という読者の方は、こちらの付録に目を通してみてください。

//////////////////////////
In *Appendix B* we explore scripting and extending Git through tools like libgit2 and JGit. If you're
interested in writing complex and fast custom tools and need low level Git access, this is where you can
see what that landscape looks like.
//////////////////////////
**付録 B** では、libgit2 や Jgit といったツールを使って Git を拡張する方法を解説します。軽快に動作する複雑な独自ツールを作ろうとしていて、低いレイヤーから Git を操作する必要がある読者の方は、この付録に目を通せば概要がつかめるでしょう。

//////////////////////////
Finally in *Appendix C* we go through all the major Git commands one at a time and review where in the book
we covered them and what we did with them. If you want to know where in the book we used any specific Git
command you can look that up here.
//////////////////////////
最後となる **付録 C** では、主だった Git コマンドについて、本書のどの部分でどのように説明したかを振り返っていきます。掲載箇所を確認したいコマンドがある、という読者の方は、この付録を使って調べてみてください。

//////////////////////////
Let’s get started.
//////////////////////////
さあ、では本編に移りましょう。
