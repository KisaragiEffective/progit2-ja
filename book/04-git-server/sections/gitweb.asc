=== GitWeb

(((serving repositories, GitWeb)))(((GitWeb)))
//////////////////////////
Now that you have basic read/write and read-only access to your project, you may want to set up a simple web-based visualizer.
Git comes with a CGI script called GitWeb that is sometimes used for this.
//////////////////////////
これで、読み書き可能なアクセス方法と読み込み専用のアクセス方法を用意できるようになりました。次にほしくなるのは、ウェブベースでの閲覧方法でしょうか。
Git には標準で GitWeb という CGI スクリプトが付属しており、これを使うことができます。

[[gitweb]]
//////////////////////////
.GitWeb のユーザーインターフェイス
image::images/git-instaweb.png[GitWeb のユーザーインターフェイス]
//////////////////////////

//////////////////////////
If you want to check out what GitWeb would look like for your project, Git comes with a command to fire up a temporary instance if you have a lightweight server on your system like `lighttpd` or `webrick`.
On Linux machines, `lighttpd` is often installed, so you may be able to get it to run by typing `git instaweb` in your project directory.
If you're running a Mac, Leopard comes preinstalled with Ruby, so `webrick` may be your best bet.
To start `instaweb` with a non-lighttpd handler, you can run it with the `--httpd` option.(((git commands, instaweb)))
//////////////////////////
自分のプロジェクトでためしに GitWeb を使ってみようという人のために、一時的なインスタンスを立ち上げるためのコマンドが Git に付属しています。これを実行するには `lighttpd` や `webrick` といった軽量なサーバーが必要です。
Linux マシンなら、たいてい `lighttpd` がインストールされています。これを実行するには、プロジェクトのディレクトリで `git instaweb` と打ち込みます。
Mac の場合なら、Leopard には Ruby がプレインストールされています。したがって `webrick` が一番よい選択肢でしょう。`instaweb` を lighttpd 以外で実行するには、`--httpd` オプションを指定します。(((git commands, instaweb)))

[source,console]
----
$ git instaweb --httpd=webrick
[2009-02-21 10:02:21] INFO  WEBrick 1.3.1
[2009-02-21 10:02:21] INFO  ruby 1.8.6 (2008-03-03) [universal-darwin9.0]
----

//////////////////////////
That starts up an HTTPD server on port 1234 and then automatically starts a web browser that opens on that page.
It's pretty easy on your part.
When you're done and want to shut down the server, you can run the same command with the `--stop` option:
//////////////////////////
これは、HTTPD サーバーをポート 1234 で起動させ、自動的にウェブブラウザーを立ち上げてそのページを表示させます。
非常にお手軽です。
ひととおり見終えてサーバーを終了させたくなったら、同じコマンドに `--stop` オプションをつけて実行します。

[source,console]
----
$ git instaweb --httpd=webrick --stop
----

//////////////////////////
If you want to run the web interface on a server all the time for your team or for an open source project you're hosting, you'll need to set up the CGI script to be served by your normal web server.
Some Linux distributions have a `gitweb` package that you may be able to install via `apt` or `yum`, so you may want to try that first.
We'll walk through installing GitWeb manually very quickly.
First, you need to get the Git source code, which GitWeb comes with, and generate the custom CGI script:
//////////////////////////
ウェブインターフェイスをチーム内で常時立ち上げたりオープンソースプロジェクト用に公開したりする場合は、CGI スクリプトを設定して通常のウェブサーバーに配置しなければなりません。
Linux のディストリビューションの中には、`apt` や `yum` などで `gitweb` パッケージが用意されているものもあります。まずはそれを探してみるとよいでしょう。
手動での GitWeb のインストールについて、さっと流れを説明します。
まずは Git のソースコードを取得しましょう。その中に GitWeb が含まれており、CGI スクリプトを作ることができます。

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
$ cd git/
$ make GITWEB_PROJECTROOT="/opt/git" prefix=/usr gitweb
    SUBDIR gitweb
    SUBDIR ../
make[2]: `GIT-VERSION-FILE' is up to date.
    GEN gitweb.cgi
    GEN static/gitweb.js
$ sudo cp -Rf gitweb /var/www/
----

//////////////////////////
Notice that you have to tell the command where to find your Git repositories with the `GITWEB_PROJECTROOT` variable.
Now, you need to make Apache use CGI for that script, for which you can add a VirtualHost:
//////////////////////////
コマンドを実行する際に、Git リポジトリの場所を `GITWEB_PROJECTROOT` 変数で指定しなければならないことに注意しましょう。
さて、次は Apache にこのスクリプトを処理させるようにしなければなりません。VirtualHost に次のように追加しましょう。

[source,console]
----
<VirtualHost *:80>
    ServerName gitserver
    DocumentRoot /var/www/gitweb
    <Directory /var/www/gitweb>
        Options ExecCGI +FollowSymLinks +SymLinksIfOwnerMatch
        AllowOverride All
        order allow,deny
        Allow from all
        AddHandler cgi-script cgi
        DirectoryIndex gitweb.cgi
    </Directory>
</VirtualHost>
----
//////////////////////////
Again, GitWeb can be served with any CGI or Perl capable web server; if you prefer to use something else, it shouldn't be difficult to set up.
At this point, you should be able to visit `http://gitserver/` to view your repositories online.
//////////////////////////
GitWeb は、CGI か Perl に対応したウェブサーバーならどんなものを使っても動かすことができます。何か別のサーバーのほうがよいというのなら、そのサーバーで動かすのもたやすいことでしょう。これで、`http://gitserver/` にアクセスすればリポジトリをオンラインで見られるようになりました。
