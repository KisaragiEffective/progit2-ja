//////////////////////////
=== A Short History of Git
//////////////////////////
=== Git略史

//////////////////////////
As with many great things in life, Git began with a bit of creative destruction and fiery controversy.
//////////////////////////
人生における多くの素晴らしい出来事のように、Gitはわずかな創造的破壊と熱烈な論争から始まりました。

//////////////////////////
The Linux kernel is an open source software project of fairly large scope.(((Linux)))
For most of the lifetime of the Linux kernel maintenance (1991–2002), changes to the software were passed around as patches and archived files.
In 2002, the Linux kernel project began using a proprietary DVCS called BitKeeper.(((BitKeeper)))
//////////////////////////
Linuxカーネルは、非常に巨大な範囲のオープンソース・ソフトウェア・プロジェクトの一つです。(((Linux)))
Linuxカーネル保守の大部分の期間（1991-2002）の間は、このソフトウェアに対する変更は、パッチとアーカイブしたファイルとして次々にまわされていました。
2002年に、Linuxカーネル・プロジェクトはプロプライエタリのDVCSであるBitKeeperを使い始めました。(((BitKeeper)))

//////////////////////////
In 2005, the relationship between the community that developed the Linux kernel and the commercial company that developed BitKeeper broke down, and the tool's free-of-charge status was revoked.
This prompted the Linux development community (and in particular Linus Torvalds, the creator of Linux) to develop their own tool based on some of the lessons they learned while using BitKeeper.(((Linus Torvalds)))
Some of the goals of the new system were as follows:
//////////////////////////
2005年に、Linuxカーネルを開発していたコミュニティと、BitKeeperを開発していた営利企業との間の協力関係が崩壊して、課金無しの状態が取り消されました。
これは、Linux開発コミュニティ（と、特にLinuxの作者のLinus Torvalds）に、BitKeeperを利用している間に学んだ幾つかの教訓を元に、彼ら独自のツールの開発を促しました。(((Linus Torvalds)))
新しいシステムの目標の幾つかは、次の通りでした：

//////////////////////////
*  Speed
*  Simple design
*  Strong support for non-linear development (thousands of parallel branches)
*  Fully distributed
*  Able to handle large projects like the Linux kernel efficiently (speed and data size)
//////////////////////////
*  スピード
*  シンプルな設計
*  ノンリニア開発(数千の並列ブランチ)への強力なサポート
*  完全な分散
*  Linux カーネルのような大規模プロジェクトを(スピードとデータサイズで)効率的に取り扱い可能

//////////////////////////
Since its birth in 2005, Git has evolved and matured to be easy to use and yet retain these initial qualities.
It's incredibly fast, it's very efficient with large projects, and it has an incredible branching system for non-linear development (See <<ch03-git-branching#ch03-git-branching>>).
//////////////////////////
2005年のその誕生から、Gitは使いやすく発展・成熟してきており、さらにその初期の品質を維持しています。
とても高速で、巨大プロジェクトではとても効率的で、ノンリニア開発のためのすごい分岐システム（branching system）を備えています（<<ch03-git-branching#ch03-git-branching>>参照）。
