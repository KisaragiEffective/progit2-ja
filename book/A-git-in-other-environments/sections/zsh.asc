//////////////////////////
=== Git in Zsh
//////////////////////////
=== ZshでGitを使う

(((zsh)))(((tab completion, zsh)))(((shell prompts, zsh)))
//////////////////////////
Git also ships with a tab-completion library for Zsh.
Just copy `contrib/completion/git-completion.zsh` to your home directory and source it from your `.zshrc`.
Zsh's interface is a bit more powerful than Bash's:
//////////////////////////
Gitには、Zsh用のタブ補完ライブラリも同梱されています。
`contrib/completion/git-completion.zsh` をあなたのホームディレクトリにコピーした上で、 `.zshrc` で読み込んでください。
Zshのインターフェイスは、Bashよりさらに強力です。

[source,console]
----
$ git che<tab>
check-attr        -- display gitattributes information
check-ref-format  -- ensure that a reference name is well formed
checkout          -- checkout branch or paths to working tree
checkout-index    -- copy files from index to working directory
cherry            -- find commits not merged upstream
cherry-pick       -- apply changes introduced by some existing commits
----

//////////////////////////
Ambiguous tab-completions aren't just listed; they have helpful descriptions, and you can graphically navigate the list by repeatedly hitting tab.
This works with Git commands, their arguments, and names of things inside the repository (like refs and remotes), as well filenames and all the other things Zsh knows how to tab-complete.
//////////////////////////
タブ補完の結果が一意に定まらない場合にできることは、候補のリスト表示だけではありません。役に立つ説明が表示されますし、繰り返しタブを押下すれば、グラフィカルにリスト内をナビゲートすることもできます。
この機能は、Gitのコマンド、Gitコマンドの引数、リポジトリ内にあるものの名前（参照やリモートなど）に対して働きます。また、ファイル名や、その他Zsh自身がタブ補完の方法を知っている要素に対しても働きます。

//////////////////////////
Zsh happens to be fairly compatible with Bash when it comes to prompt customization, but it allows you to have a right-side prompt as well.
To include the branch name on the right side, add these lines to your `~/.zshrc` file:
//////////////////////////
Zshのプロンプトのカスタマイズ機能は、ほぼBash互換です。加えて、Zshでは右端にもプロンプトを表示できます。
ブランチ名を右端に表示するには、 `~/.zshrc` ファイルに次の内容を追加します。

[source,console]
----
setopt prompt_subst
. ~/git-prompt.sh
export RPROMPT=$'$(__git_ps1 "%s")'
----

//////////////////////////
This results in a display of the current branch on the right-hand side of the terminal window, whenever your shell is inside a Git repository.
It looks a bit like this:
//////////////////////////
これで、シェルがGitリポジトリ内にいるときには、ターミナルウィンドウの右側に現在のブランチ名が表示されるようになります。
見た目は次のようになります。

//////////////////////////
.Customized `zsh` prompt.
image::images/zsh-prompt.png[Customized `zsh` prompt.]
//////////////////////////
.カスタマイズされた `zsh` のプロンプト
image::images/zsh-prompt.png[カスタマイズされた `zsh` のプロンプト]

//////////////////////////
Zsh is powerful enough that there are entire frameworks dedicated to making it better.
One of them is called "oh-my-zsh", and it can be found at https://github.com/robbyrussell/oh-my-zsh[].
oh-my-zsh's plugin system comes with powerful git tab-completion, and it has a variety of prompt "themes", many of which display version-control data.
<<oh_my_zsh_git>> is just one example of what can be done with this system.
//////////////////////////
Zshは非常にパワフルであり、Zshには自身を改善するためのフレームワークも備わっています。
そのフレームワークの一つに "oh-my-zsh" があります。これは https://github.com/robbyrussell/oh-my-zsh にあります。
oh-my-zshのプラグインシステムには、強力なGit用タブ補完機能が付属しています。また、各種のプロンプトの「テーマ」が付属していて、バージョン管理に関するデータをプロンプトに表示できます。
<<oh_my_zsh_git>> は、このシステムでできることの一例に過ぎません。

//////////////////////////
[[oh_my_zsh_git]]
.An example of an oh-my-zsh theme.
image::images/zsh-oh-my.png[An example of an oh-my-zsh theme.]
//////////////////////////
[[oh_my_zsh_git]]
.oh-my-zshのテーマの例
image::images/zsh-oh-my.png[oh-my-zshのテーマの例]
